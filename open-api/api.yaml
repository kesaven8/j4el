openapi: "3.0.0"
info:
  version: 1.0.0
  title: Task Creation
  description: Contract for task application
servers:
  - url: localhost:8081
paths:
  /task/create:
    post:
      operationId: createTask
      requestBody:
        description: Dto for Creating Task
        required: false
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/TaskDto'
      responses:
        201:
          description: Task Created Successfully
          content:
            application/json:
              schema:
                type: object
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
  /task/update/{id}:
    post:
      operationId: updateTask
      parameters:
        - in: path
          name: id
          description: unique task id
          required: true
          schema:
            type: string
      requestBody:
        description: update a task
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/TaskDto'
      responses:
        201:
          description: Task updated Successfully
          content:
            application/json:
              schema:
                type: object
  /task/delete/{id}:
    delete:
      operationId: deleteTask
      parameters:
        - in: path
          name: id
          description: unique task id
          required: true
          schema:
            type: string
      responses:
        201:
          description: Task deleted Successfully
          content:
            application/json:
              schema:
                type: object
  /task:
    get:
      operationId: getTask
      summary: Get All Task
      parameters:
        - name: groupBy
          in: query
          required: false
          schema:
            type: string
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
        - name: pageNumber
          required: true
          in: query
          schema:
            type: integer
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Get all Tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDto'
components:
  schemas:
    TaskDto:
      type: object
      required:
        - title
        - scheduleDate
        - status
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        scheduledDate:
          type: string
          format: date
        location:
          type: string
        status:
          type: string
        updateOn:
          type: string
          format: date
    TaskResponseDto:
      type: object
      properties:
        totalPages:
          type: integer
        totalElements:
          type: integer
        pageNumber:
          type: integer
        pageSize:
          type: integer
        taskDto:
          type: object